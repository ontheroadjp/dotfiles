
1. データベースの作成（ mysql> ）
　→　create database mydb;

2. モデルの作成
　→　$php artisan make:model Album
　→　同時にマイグレーションファイル生成される
 
3. マイグレーションファイルの修正
public function up()
{
 	Schema::create('posts', function($table)
	{
		$table->increments('id');
		$table->string('title');
		$table->string('cat_id');
		$table->text('content');
	 	$table->unsignedInteger('comment_count');
		$table->timestamps();
	} );
}
 
 ----
	$table->increments('id');
	$table->string('title');
	$table->text('body');
	$table->timestamps();
	$table->integer('user_id')->unsigned();
	$table->foreign('user_id')
				->references('id')
				->on('users')
				->onDelete('cascade');
	$table->softDeleted();
	$table->timestamp('publishd_at');
----


4. テーブルの作成
　→　$php artisan migrate

5. コントローラーの作成（ /app/Http/Controller/AlbumController.php ）
　→　$php artisan make:controller AlbumController

　// DB からデータを取得して出力
　public function index() {
　	return var_dump( \App\Album::all()->toString() );
　	// return var_dump( \App\Album::find(2) );a
　}

　// DB レコードを追加
　public function create() {
　	return \App\Album::create( [ 'name' => 'EOS 7D' ] );
　}
　
　// ビューに引き渡す
　public function index() {
　	$albums = Albun::all();
　	return view( 'albums.index', compact( 'albums' ) );
　}

6. ルーティングの設定（ /app/Http/routes.php ）
　→　Route::get( '/', 'AlbumController@index' );		// 基本コントローラー
　→　Route::get( '/{id}', 'AlbumController@show' );	// 基本コントローラー
　→　Route::get( '/', 'AblumController' );			// 暗黙的なコントローラー
　→　Route::resource( '/', 'AlbumController' );		// RESTフルコントローラー

7. ビューの作成（ /resources/view/album/index.blade.php ）
　@extends( 'app' )
 
　@section( 'content' )
   　 <h1>Articles</h1>
　　<hr/>
　　@foreach( $articles as $article )
　　　<article>
　　　　<h2>
　　　　　<a href="/articles/{{ $article->id }}">{{ $article->title }}</a>
　　　　　<!-- <a href="{{ action('ArticlesController@show', [$article->id]) }}">{{ $article->title }}</a> -->
　　　　　<!-- <a href="{{ url('/articles', $article->id) }}">{{ $article->title }}</a> -->
　　　　</h2>
　　　　<div class="body">{{ $article->body }}</div>
　　　</article>
　　@endforeach
@stop
