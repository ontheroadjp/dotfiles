snippet ?
	<?php ${1} ?>${2}

snippet ?=
	<?= ${1} ?>${2}


#class
snippet class
	class ${1} 
	{
		${2}
	}

snippet classe
	class ${1} extends ${2} 
	{
		${3}
	}

# method
snippet met
	public function ${1}(${2})
	{
		${3}
	}

snippet pmet
	protected function ${1}(${2})
	{
		${3}
	}

snippet smet
	public static function ${1}(${2})
	{
		${3}
	}

snippet cmet
	public function __construct(${1})
	{
	    ${2}
	}

snippet inmet
	function (${1} {
	${2}
	});

snippet pub
	public

snippet pro
	protected

snippet pri
	private
# include, require
snippet inc
	include '${1}';
	${2}

snippet req
	require '${1}';
	${2}

# utilities
snippet $
	$this->

# if
snippet if
	if( ${1} ) {
		${2}
	}

snippet iif
	if $${1} = ${2} ? ${3} : ${4};
	${5}

snippet ?if
	<?php if(${1}) : ?>
		${2}
	<?php endif ?>

snippet ?else
	<?php else: ?>

# for
snippet for
	for( $${1:}=0; $$1 < ${2:count}; $$1++ ) {
		${3}
	}

snippet ?for
	<?php for( $${1:}=0; $$1 < ${2:count}; $$1++ ) : ?>
		${3}
	<?php endfor ?>

# foreach
snippet fe
	foreach( $${1} as $${2} ) {
		${3}
	}

snippet fee
	foreach( $${1} as $key => $val ) {
		${2}
	}

snippet ?fe
	<?php foreach( $${1} as $${2} ) : ?>
		${3}
	<?php endforeach ?>

# switch
snippet switch
	switch(${1}) {
		case "${2}":
			break;
		default:
			break;
	}

# PHPUnit
snippet phpunit
	class ${1}Test extends PHPUnit_Framework_TestCase
	{
	
	    public function setup()
		{

	    }
	
	    public function tearDown()
		{
	
	    }
	
		/** @test */
	    public function test_something()
		{

		}
	}

# PHPUnit for laravel
snippet laratest
	<?php
	
	use Illuminate\Foundation\Testing\WithoutMiddleware;
	use Illuminate\Foundation\Testing\DatabaseMigrations;
	use Illuminate\Foundation\Testing\DatabaseTransactions;
	
	class ${1}Test extends TestCase
	{
	    use DatabaseTransactions;
	
	    public function setup()
	    {
	        parent::setup();
	    }
	
	    public function tearDown()
	    {
	
	    }
	
	    /** @test */
	    public function test_something()
	    {
	        $this->assertTrue(true);
	    }
	}

